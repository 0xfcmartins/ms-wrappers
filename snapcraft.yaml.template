name: {{APP_NAME}}
version: 1.0.0
summary: Web wrapper for {{DESKTOP_NAME}}
description: |
  {{APP_DESCRIPTION}}
title: {{DESKTOP_NAME}}

grade: stable
confinement: strict
base: core22

apps:
    {{APP_NAME}}:
      command: bin/desktop-launch electron $SNAP/app/main.js
      desktop: usr/share/applications/{{APP_NAME}}.desktop
      extensions: [gnome]
      environment:
        ELECTRON_ENABLE_LOGGING: "true"
        ICU_DATA_DIR: "$SNAP/usr/share/icu"
      plugs:
        - network
        - camera
        - audio-playback
        - audio-record
        - pulseaudio
        - alsa
        - desktop
        - desktop-legacy
        - home
        - removable-media
        - opengl
        - browser-support

parts:
  application:
    plugin: dump
    source: .
    build-packages:
      - npm
    stage-packages:
      - libnspr4
      - libnss3
      - libxss1
      - libsecret-1-0
      - libpulse0
      - libgtk-3-0
      - libicu70

electron:
  plugin: dump
  source: https://github.com/electron/electron/releases/download/v35.1.2/electron-v35.1.2-linux-x64.zip
  source-type: zip
  override-build: |
    mkdir -p $SNAPCRAFT_PART_INSTALL/bin
    cp electron $SNAPCRAFT_PART_INSTALL/bin/
    chmod +x $SNAPCRAFT_PART_INSTALL/bin/electron

    mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib $SNAPCRAFT_PART_INSTALL/usr/share/icu

    for file in libffmpeg.so icudtl.dat snapshot_blob.bin v8_context_snapshot.bin; do
      if [ -f "$file" ]; then
        case "$file" in
          *.so)
            cp "$file" $SNAPCRAFT_PART_INSTALL/usr/lib/
            ;;
          icudtl.dat)
            cp "$file" $SNAPCRAFT_PART_INSTALL/usr/share/icu/
            ;;
          *.bin)
            cp "$file" $SNAPCRAFT_PART_INSTALL/bin/
            ;;
        esac
      else
        echo "Warning: $file is missing in your Electron zip!"
      fi
    done

    cat > $SNAPCRAFT_PART_INSTALL/bin/desktop-launch << 'EOF'
    #!/bin/bash

    export LD_LIBRARY_PATH="$SNAP/usr/lib:$LD_LIBRARY_PATH"
    export ICU_DATA_DIR="$SNAP/usr/share/icu"
    export ELECTRON_FLAGS="--icu-data-dir=$SNAP/usr/share/icu 
                           --v8-snapshot-blob-path=$SNAP/bin/snapshot_blob.bin 
                           --v8-context-snapshot-path=$SNAP/bin/v8_context_snapshot.bin"
    
    exec "$@" $ELECTRON_FLAGS
    EOF

    chmod +x $SNAPCRAFT_PART_INSTALL/bin/desktop-launch

  prime:
    - bin/electron
    - bin/desktop-launch
    - bin/snapshot_blob.bin
    - bin/v8_context_snapshot.bin
    - usr/lib/libffmpeg.so
    - usr/share/icu/icudtl.dat

  icu-data:
    plugin: nil
    after: [electron]
    override-build: |
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/share/icu
      
      if [ -f "/usr/share/chromium/icudtl.dat" ]; then
        cp /usr/share/chromium/icudtl.dat $SNAPCRAFT_PART_INSTALL/usr/share/icu/
      elif [ -f "/usr/lib/chromium-browser/icudtl.dat" ]; then
        cp /usr/lib/chromium-browser/icudtl.dat $SNAPCRAFT_PART_INSTALL/usr/share/icu/
      fi
    build-packages:
      - chromium-browser
    prime:
      - usr/share/icu/icudtl.dat

  chromium-ffmpeg:
    plugin: nil
    after: [electron, icu-data]
    override-build: |
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib
      
      apt-get update
      apt-get install -y chromium-browser
      
      if [ -f "/usr/lib/chromium-browser/libffmpeg.so" ]; then
        cp /usr/lib/chromium-browser/libffmpeg.so $SNAPCRAFT_PART_INSTALL/usr/lib/
      fi
    build-packages:
      - chromium-browser
    prime:
      - usr/lib/libffmpeg.so